[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Max\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Max\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Azul Systems, Inc. Java 13.0.11)
[debug]       Load.loadUnit: plugins took 211.4553ms
[debug]       Load.loadUnit: defsScala took 0.5285ms
[debug] [Loading] Scanning directory C:\Users\Max\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Max\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.5183 ms
[debug]           Load.resolveProject(global-plugins) took 83.6101ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Max\.sbt\1.0\plugins, plugins: List(<none>))) took 152.986ms
[debug] [Loading] Done in C:\Users\Max\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 193.7547ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4721ms
[debug]     Load.loadUnit(file:/C:/Users/Max/.sbt/1.0/plugins/, ...) took 423.3253ms
[debug]   Load.apply: load took 735.8182ms
[debug]   Load.apply: resolveProjects took 11.4785ms
[debug]   Load.apply: finalTransforms took 110.0061ms
[debug]   Load.apply: config.delegates took 12.9739ms
[debug]   Load.apply: Def.make(settings)... took 1013.7119ms
[debug]   Load.apply: structureIndex took 247.5852ms
[debug]   Load.apply: mkStreams took 2.1209ms
[info] loading global plugins from C:\Users\Max\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 14599.3723ms
[debug]           Load.loadUnit: plugins took 39.1525ms
[debug]           Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory E:\SparkScalaCourse\Datumo_recruitment_assignment\project
[debug]             Load.loadUnit: mkEval took 8.1385ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\SparkScalaCourse\Datumo_recruitment_assignment\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2575 ms
[info] loading settings for project datumo_recruitment_assignment-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(datumo_recruitment_assignment-build) took 20.9666ms
[debug]             Load.loadTransitive: finalizeProject(Project(id datumo_recruitment_assignment-build, base: E:\SparkScalaCourse\Datumo_recruitment_assignment\project, plugins: List(<none>))) took 23.8939ms
[debug] [Loading] Done in E:\SparkScalaCourse\Datumo_recruitment_assignment\project, returning: (datumo_recruitment_assignment-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5205.8875ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.9955ms
[debug]         Load.loadUnit(file:/E:/SparkScalaCourse/Datumo_recruitment_assignment/project/, ...) took 5260.2123ms
[debug]       Load.apply: load took 5262.4388ms
[debug]       Load.apply: resolveProjects took 0.1424ms
[debug]       Load.apply: finalTransforms took 20.0428ms
[debug]       Load.apply: config.delegates took 0.5129ms
[debug]       Load.apply: Def.make(settings)... took 172.0713ms
[debug]       Load.apply: structureIndex took 38.9545ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from E:\SparkScalaCourse\Datumo_recruitment_assignment\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8618.5971ms
[debug]     Load.loadUnit: defsScala took 0.0076ms
[debug] [Loading] Scanning directory E:\SparkScalaCourse\Datumo_recruitment_assignment
[debug]       Load.loadUnit: mkEval took 0.4482ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.408 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 58.2803ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\SparkScalaCourse\Datumo_recruitment_assignment, plugins: List(<none>))) took 69.1704ms
[debug] [Loading] Done in E:\SparkScalaCourse\Datumo_recruitment_assignment, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2429.5567ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.0043ms
[debug]   Load.loadUnit(file:/E:/SparkScalaCourse/Datumo_recruitment_assignment/, ...) took 11077.4204ms
[debug] Load.apply: load took 11089.3679ms
[debug] Load.apply: resolveProjects took 0.2214ms
[debug] Load.apply: finalTransforms took 72.1464ms
[debug] Load.apply: config.delegates took 0.6367ms
[debug] Load.apply: Def.make(settings)... took 142.1912ms
[debug] Load.apply: structureIndex took 43.4945ms
[debug] Load.apply: mkStreams took 0.0042ms
[info] set current project to Datumo_recruitment_assignment (in build file:/E:/SparkScalaCourse/Datumo_recruitment_assignment/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- E:\SparkScalaCourse\Datumo_recruitment_assignment\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50767 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50767, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Datumo_recruitment_assignment (in build file:/E:/SparkScalaCourse/Datumo_recruitment_assignment/)
[debug] > Exec(idea-shell, None, None)
